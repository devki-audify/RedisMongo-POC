version: "3"
services:
  #  Create a service named postgres.
  postgres:
    #   Use the Docker Image postgres. This will pull the newest release.
    image: postgres
    #   Give the container the name postgres. You can change to something else.
    container_name: postgres
    #   Setup the username, password, and database name. You can change these values.
    environment:
      - POSTGRES_USER=local
      - POSTGRES_PASSWORD=local
      - POSTGRES_DB=rest
    #   Maps port 5432 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
    ports:
      - 5432:5432
    #   Set a volume some that database is not lost after shutting down the container.
    #   I used the name postgres-data but you can changed it to something else.
    networks:
      - postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongo:
    image: mongo
    volumes:
      - mongo-data:/data/db/mongo
    ports:
      - "27017:27017"

  redis:
    image: redis
    volumes:
      - redis-data:/data/db/redis
    ports:
      - 6379:6379
    networks:
      - backing-services
    
  rabbitmq:
    image: 'rabbitmq:management'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/data/db/rabbitmq

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    build: .
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - kafka-data:/var/run/docker.sock

networks:
  postgres:
    driver: bridge
  backing-services:
    driver: bridge

volumes:
  postgres-data:
  mongo-data:
  redis-data:
  rabbitmq-data:
  kafka-data: